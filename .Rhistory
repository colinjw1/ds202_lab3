install.packages("tidyverse")
install.packages("dplyr")
version
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='l')
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b')
points(ankeny$Year, ankeny$Violent1000, col='blue', pch=2)
## cities data
devtools::install_github('xdaiISU/classdata')
library(classdata)
## cities data
library(devtools)
## cities data
devtools::install_github('xdaiISU/classdata')
library(classdata)
# Plot a pair of variables using plot()
plot(dat2016$Population, dat2016$Violent.crime)
# Make plots nicer
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b', xlab='Year', ylab='Violent crimes per 1000', main='Violent crimes over the years')
rank(violent)['Northbrook']
rank(violent)['Northbrook']
Ames
## cities data
devtools::install_github('xdaiISU/classdata')
legend('topright', c('Ames', 'Ankeny'), col=c('black', 'blue'), pch=c(1, 2), lty = c(1, 2))
## cities data
devtools::install_github('xdaiISU/classdata')
# Which is the most dangerous city in 2016?
violent <- dat2016$Violent.crime
names(violent) <- dat2016$City
sort(violent)
sort(violent, decreasing = TRUE)
head(sort(violent, decreasing = TRUE))
worst5 <- head(sort(violent, decreasing = TRUE), n = 5)
names(worst5)
rank(violent)
rank(violent)['Ames']
rank(violent)['Ames']
library(classdata)
?cities
library(classdata)
?cities
unique(cities$City)
length(unique(cities$City))
range(cities$Year)
dat2016 <- cities[cities$Year == 2016, ]
# Which is the most dangerous city in 2016?
violent <- dat2016$Violent.crime
names(violent) <- dat2016$City
sort(violent)
sort(violent, decreasing = TRUE)
head(sort(violent, decreasing = TRUE))
worst5 <- head(sort(violent, decreasing = TRUE), n = 5)
names(worst5)
rank(violent)
rank(violent)['Ames']
order(violent)
violent[9]
violent[37]
violent[order(violent)]
a <- dat2016[order(violent), ]
## Plotting functions
# Plotting one single variable
hist(dat2016$Violent.crime)
hist(dat2016$Violent.crime / dat2016$Population)
boxplot(dat2016$Violent.crime / dat2016$Population)
amesPop <- dat2016$Population[dat2016$City == 'Ames']
ankenyPop <- dat2016$Population[dat2016$City == 'Ankeny']
pop <- c(amesPop, ankenyPop)
names(pop) <- c('Ames', 'Ankeny')
barplot(pop)
# Plot a pair of variables using plot()
plot(dat2016$Population, dat2016$Violent.crime)
plot(log(dat2016$Population), log(dat2016$Violent.crime))
x <- log(dat2016$Population)
y <- log(dat2016$Violent.crime)
city <- dat2016$City
plot(x, y)
points(x[city == 'Ames'], y[city == 'Ames'], col='red')
points(x[city == 'Ames'], y[city == 'Ames'], col='red', cex=2)
points(x[city == 'Ames'], y[city == 'Ames'], col='red', cex=2, pch=3)
# Compare the crimes in Ames and Ankeny
cities$Violent1000 <- cities$Violent.crime / cities$Population * 1000
ames <- cities[cities$City == 'Ames', ]
ankeny <- cities[cities$City == 'Ankeny', ]
plot(ames$Year, ames$Violent1000)
plot(ames$Year, ames$Violent1000, ylim=c(0, 4))
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)))
plot(ankeny$Year, ankeny$Violent1000, ylim=c(0, max(ames$Violent1000)))
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='l')
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b')
points(ankeny$Year, ankeny$Violent1000, col='blue', pch=2)
lines(ankeny$Year, ankeny$Violent1000, col='blue', lty=2)
abline(h = 2)
# Make plots nicer
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b', xlab='Year', ylab='Violent crimes per 1000', main='Violent crimes over the years')
points(ankeny$Year, ankeny$Violent1000, col='blue', pch=2)
lines(ankeny$Year, ankeny$Violent1000, col='blue', lty=2)
legend('topright', c('Ames', 'Ankeny'), col=c('black', 'blue'), pch=c(1, 2), lty = c(1, 2))
## cities data
devtools::install_github('xdaiISU/classdata')
library(classdata)
library(classdata)
?cities
unique(cities$City)
length(unique(cities$City))
range(cities$Year)
dat2016 <- cities[cities$Year == 2016, ]
# Which is the most dangerous city in 2016?
violent <- dat2016$Violent.crime
names(violent) <- dat2016$City
sort(violent)
sort(violent, decreasing = TRUE)
head(sort(violent, decreasing = TRUE))
worst5 <- head(sort(violent, decreasing = TRUE), n = 5)
names(worst5)
rank(violent)
rank(violent)['Northbrook']
order(violent)
violent[9]
violent[37]
violent[order(violent)]
a <- dat2016[order(violent), ]
## Plotting functions
# Plotting one single variable
hist(dat2016$Violent.crime)
hist(dat2016$Violent.crime / dat2016$Population)
boxplot(dat2016$Violent.crime / dat2016$Population)
amesPop <- dat2016$Population[dat2016$City == 'Ames']
ankenyPop <- dat2016$Population[dat2016$City == 'Ankeny']
pop <- c(amesPop, ankenyPop)
names(pop) <- c('Ames', 'Ankeny')
barplot(pop)
# Plot a pair of variables using plot()
plot(dat2016$Population, dat2016$Violent.crime)
plot(log(dat2016$Population), log(dat2016$Violent.crime))
x <- log(dat2016$Population)
y <- log(dat2016$Violent.crime)
city <- dat2016$City
plot(x, y)
points(x[city == 'Ames'], y[city == 'Ames'], col='red')
points(x[city == 'Ames'], y[city == 'Ames'], col='red', cex=2)
points(x[city == 'Ames'], y[city == 'Ames'], col='red', cex=2, pch=3)
# Compare the crimes in Ames and Ankeny
cities$Violent1000 <- cities$Violent.crime / cities$Population * 1000
ames <- cities[cities$City == 'Ames', ]
ankeny <- cities[cities$City == 'Ankeny', ]
plot(ames$Year, ames$Violent1000)
plot(ames$Year, ames$Violent1000, ylim=c(0, 4))
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)))
plot(ankeny$Year, ankeny$Violent1000, ylim=c(0, max(ames$Violent1000)))
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='l')
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b')
points(ankeny$Year, ankeny$Violent1000, col='blue', pch=2)
lines(ankeny$Year, ankeny$Violent1000, col='blue', lty=2)
abline(h = 2)
# Make plots nicer
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b', xlab='Year', ylab='Violent crimes per 1000', main='Violent crimes over the years')
points(ankeny$Year, ankeny$Violent1000, col='blue', pch=2)
lines(ankeny$Year, ankeny$Violent1000, col='blue', lty=2)
legend('topright', c('Ames', 'Ankeny'), col=c('black', 'blue'), pch=c(1, 2), lty = c(1, 2))
library(classdata)
?cities
unique(cities$City)
length(unique(cities$City))
range(cities$Year)
dat2016 <- cities[cities$Year == 2016, ]
# Which is the most dangerous city in 2016?
violent <- dat2016$Violent.crime
names(violent) <- dat2016$City
sort(violent)
sort(violent, decreasing = TRUE)
head(sort(violent, decreasing = TRUE))
worst5 <- head(sort(violent, decreasing = TRUE), n = 5)
names(worst5)
rank(violent)
rank(violent)['Waterloo']
order(violent)
violent[9]
violent[37]
violent[order(violent)]
a <- dat2016[order(violent), ]
## Plotting functions
# Plotting one single variable
hist(dat2016$Violent.crime)
hist(dat2016$Violent.crime / dat2016$Population)
boxplot(dat2016$Violent.crime / dat2016$Population)
amesPop <- dat2016$Population[dat2016$City == 'Ames']
ankenyPop <- dat2016$Population[dat2016$City == 'Ankeny']
pop <- c(amesPop, ankenyPop)
names(pop) <- c('Ames', 'Ankeny')
barplot(pop)
# Plot a pair of variables using plot()
plot(dat2016$Population, dat2016$Violent.crime)
plot(log(dat2016$Population), log(dat2016$Violent.crime))
x <- log(dat2016$Population)
y <- log(dat2016$Violent.crime)
city <- dat2016$City
plot(x, y)
points(x[city == 'Ames'], y[city == 'Ames'], col='red')
points(x[city == 'Ames'], y[city == 'Ames'], col='red', cex=2)
points(x[city == 'Ames'], y[city == 'Ames'], col='red', cex=2, pch=3)
# Compare the crimes in Ames and Ankeny
cities$Violent1000 <- cities$Violent.crime / cities$Population * 1000
ames <- cities[cities$City == 'Ames', ]
ankeny <- cities[cities$City == 'Ankeny', ]
plot(ames$Year, ames$Violent1000)
plot(ames$Year, ames$Violent1000, ylim=c(0, 4))
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)))
plot(ankeny$Year, ankeny$Violent1000, ylim=c(0, max(ames$Violent1000)))
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='l')
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b')
points(ankeny$Year, ankeny$Violent1000, col='blue', pch=2)
lines(ankeny$Year, ankeny$Violent1000, col='blue', lty=2)
abline(h = 2)
# Make plots nicer
plot(ames$Year, ames$Violent1000, ylim=c(0, max(ames$Violent1000)),
type='b', xlab='Year', ylab='Violent crimes per 1000', main='Violent crimes over the years')
points(ankeny$Year, ankeny$Violent1000, col='blue', pch=2)
lines(ankeny$Year, ankeny$Violent1000, col='blue', lty=2)
legend('topright', c('Ames', 'Ankeny'), col=c('black', 'blue'), pch=c(1, 2), lty = c(1, 2))
install.packages("weathermetrics")
library(weathermetrics)
detach("package:weathermetrics", unload = TRUE)
library(weathermetrics)
detach("package:weathermetrics", unload = TRUE)
library(weathermetrics)
detach("package:weathermetrics", unload = TRUE)
library(weathermetrics)
detach("package:weathermetrics", unload = TRUE)
library(weathermetrics)
install.packages("ggplot2")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
summary(mpg)
worst5 <- mpg$hwy
names(worst5) <- mpg$model
worst5 <- head(sort(worst5, decreasing = TRUE), n =5)
names(worst5)
names(worst5) <- mpg$model
summary(mpg)
worst5 <- mpg$hwy
names(worst5) <- mpg$model
worst5 <- head(sort(worst5, decreasing = TRUE), n =5)
worst5 <- mpg$hwy
names(worst5) <- mpg$model
worst5 <- head(sort(worst5, decreasing = TRUE), n =5)
round(sqrt(numPerfect))
cel <- c(85, 67)
cel <- (cel - 32) * (5 / 9)
cel
vec200 <- c(200:1)
numPerfect <- c(1:2001)
round(sqrt(numPerfect))
numPerfect <- c(1:2001)
round(sqrt(numPerfect))
numPerfect <- c(1:2001)
!duplicated((sqrt(numPerfect)))
numPerfect <- c(1:2001)
numperfect[!duplicated((sqrt(numPerfect)))]
knitr::opts_chunk$set(echo = TRUE)
choco <- read.csv("https://raw.githubusercontent.com/xdaiISU/ds202materials/master/hwlabs/data/choco.csv")
str(choco)
df <- data.frame(choco)
knitr::opts_chunk$set(echo = TRUE)
```{r}
install.packages(c("tidyverse", "ggstatsplot))
install.packages("tidyverse")
install.packages("ggstatsplot")
install.packages("tidyverse")
library(ggstatsplot)
library(tidyverse)
box <- boxplot(choco$Rating, outlier.tagging = TRUE, outlier.label = choco$Company)
box <- boxplot(choco$Rating)
box <- boxplot(choco$Rating, outlier.tagging = TRUE, outlier.label = choco$Company)
box <- boxplot(choco$Rating)
View(choco)
knitr::opts_chunk$set(echo = TRUE, comment=NA)
GoodChar <- choco[(choco$Rating >= 3) , ]
Good1 <- unique(GoodChar$Characteristics1)
Good1
GoodCharCt1 <- table(GoodChar$Rating)
GoodCharCt1
GoodChar <- choco[(choco$Rating >= 3) , ]
```{r}
data(tips, package="reshape2")
?geom_abline
install.packages(rshape2)
issue install.packages('reshape2')
install.packages('reshape2')
?geom_abline
library(ggplot2)
library(reshape2)
data(tips, package="reshape2")
?geom_abline
describe(tips)
data(tips, package="reshape2")
describe(tips)
tips <- data(tips, package="reshape2")
describe(tips)
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
tips <- data(tips, package="reshape2")
summary(tips)
View(df)
data(tips, package="reshape2")
library(tips)
data(tips, package="reshape2")
help(tips)
data(tips, package="reshape2")
tips
data(tips, package="reshape2")
plot(total_bill, tip)
plot(tips$total_bill, tip)
plot(total_bill, tip)
---
title: "ds202_homework3"
author: "Adam Brandt"
date: "9/20/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
data(tips, package="reshape2")
plot(total_bill, tip)
data(tips, package="reshape2")
plot(tips$total_bill, tip)
ggplot(data = tips, aes(x = total_bill, y = tip))
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
## R Markdown
```{r}
library(ggplot2)
data(tips, package="reshape2")
ggplot(data = tips, aes(x = total_bill, y = tip)) + geom_point()
?geom_abline
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
data(tips, package="reshape2")
tips
ggplot(data = tips, aes(x = total_bill, y = tip)) + geom_point() + geom_abline(slope = .15, intercept = 0)
ggplot(data = tips, aes(x = tips$day, y = tips$gender)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
install.packages('readxl')
dat <- readxl::read_xls("C:/Users/Adam Brandt/OneDrive/Documents/DS202/ds202_lab3/GSS.xls")
install.packages("readxl")
knitr::opts_chunk$set(echo = TRUE)
install.packages('readxl')
dat <- readxl::read_xls("C:/Users/Adam Brandt/OneDrive/Documents/DS202/ds202_lab3/GSS.xls")
library(readxl)
dat <- readxl::read_xls("C:/Users/Adam Brandt/OneDrive/Documents/DS202/ds202_lab3/GSS.xls")
library(readxl)
dat <- read_xls("C:/Users/Adam Brandt/OneDrive/Documents/DS202/ds202_lab3/GSS.xls")
library(readxl)
dat <- read_xls("GSS.xls")
library(readxl)
dat <- read_xls(path = "C:/Users/Adam Brandt/OneDrive/Documents/DS202/ds202_lab3")
library(readxl)
dat <- read_xls(path = "C:/Users/Adam Brandt/OneDrive/Documents/DS202/ds202_lab3/GSS.xls")
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = tips, aes(x = total_bill, y = tip)) + facet_wrap(tips$sex~tips$smoker) + geom_point()
library(ggplot2)
library(dbplyr)
dplyr::filter(dat$`Political party affiliation`, grepl('democrat|rublican'))
dplyr::filter(dat, !grepl('democrat|rublican', `Political party affiliation`))
library(dplyr)
library(dplyr)
clear
edu <- select(data, `Political party affiliation`, `Highest year of school completed`)
edu <- select(dat, `Political party affiliation`, `Highest year of school completed`)
head(edu)
edu %>% filter(str_detect(`Political party affiliation`, "dem"))
library(stringr)
```{r}
edu <- select(dat, `Political party affiliation`, `Highest year of school completed`)
edu %>% group_by(`Political party affiliation`) %>% str
